# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    admin.section:
        class: AppBundle\Admin\SectionAdmin
        arguments: [~, AppBundle\Entity\Section, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Section, group: Section }

    admin.page:
        class: AppBundle\Admin\PageAdmin
        arguments: [~, AppBundle\Entity\Page, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Page, group: Page }

    admin.section.section_page:
        class: AppBundle\Admin\SectionPageAdmin
        arguments: [~, AppBundle\Entity\SectionPage, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: SectionPage, group: Section }

    admin.page.block:
        class: AppBundle\Admin\BlockAdmin
        arguments: [~, AppBundle\Entity\Block, ~]
        calls:
            - [ setSubClasses, [{Subscription : AppBundle\Entity\Subscription, ExternalSocialNetworks: AppBundle\Entity\ExternalSocialNetworks}]]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Block, group: Page }

    admin.page.block.social_network:
        class: AppBundle\Admin\SocialNetworkAdmin
        arguments: [~, AppBundle\Entity\SocialNetwork, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: SocialNetwork, group: Page }
